# -*- coding: utf-8 -*-
"""
Created on Wed Apr 10 08:14:52 2024

@author: aniket

"""


#####################################################
#iloc ,loc 



new_tech1={
      'courses':["python","java","c++","DBMS","Pandas","oracal"],
      'fee':[20000,30000,23000,40000,60000,23000],
      'duration':["30days","40days","55days","25days","90days","45days"],
      "Discount":[2.5,3.6,4.4,5.5,6.7,7.3]}
row_labe=['r1','r2','r3','r4','r5','r6']
df=pd.DataFrame(new_tech1,index=row_labe)
print(df)


#iloc = using index
#in slicing no need to give coma but in iloc it is need to give coma
#syntax =df.iloc[startrow:endrow , startcolumn : endcolumn]

df2=df.iloc[ : , 0:2]
df2

df2=df.iloc[1:3 , 2:4]
df2

df2=df.iloc[2] #select row by index
df2

df2=df.iloc[[1,2,4]]  #select Row by index list
df2

df2=df.iloc[1:5] #select rows by integer index Range
df2

df2=df.iloc[:1]  #select first row
df2
 
df2=df.iloc[:3]  #select first 3 row
df2
 
df2=df.iloc[-1:]  #select last rows
df2

df2=df.iloc[-3:]  #select last 3 rows
df2

df2=df.iloc[::2]  #select alternate  rows
df2
 
##################################################

#rows by name[index labels ] we use loc

df2=df.loc['r2']
df2
 
df2=df.loc[['r1','r2','r3','r4','r5']] #when we pass list then give double bracket
df2

df2=df.loc['r1':'r5']  #using range
df2

print(df.loc[:"r5"])

######################################################


#loc with column


df2=df.loc[:,['courses','fee',"duration"]] #select multiple columns
df2


df2=df.loc[:,'courses':'duration'] #select all  columns between two columns
df2

#if we pass range as int last position will be n-1 
#but when we pass range as string or name that time 
#it will be all value 


df2=df.loc[:,'fee':]  #from fee to last column
df2


df2=df.loc['r1':'r4',:'duration']  #from first column to duration
df2

df2=df.loc[:,::2]  #for alternate column
df2



#######################################################
#
#Pandas.DataFrame.query()
#Quary all rows with Courses equals "java"

df2=df.query("courses=='java'")
df2


df2=df.query("courses!='java'")
df2



